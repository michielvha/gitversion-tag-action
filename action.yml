# reference: https://docs.github.com/en/actions/sharing-automations/creating-actions/metadata-syntax-for-github-actions
# TODO: Add tag message & allow custom input overwrite
name: 'Tag a git version'
description: 'Tagging a repo with a gitVersion'

branding:
  icon: arrow-right-circle
  color: blue

inputs:
  configFilePath:
    description: 'Path to the GitVersion configuration file'
    required: true
    default: 'gitversion.yml'
  # tagMessage:
  #   description: 'Optional custom tag message'
  #   required: false


outputs:
  semVer:
    description: 'The semantic version determined by GitVersion'
    value: ${{ steps.gitversion.outputs.semVer }}

runs:
  using: composite
  steps:
  - name: Install GitVersion
    uses: gittools/actions/gitversion/setup@v0
    with:
      versionSpec: '6.0.0'
  - name: Determine Version
    id: gitversion
    uses: gittools/actions/gitversion/execute@v0
    with:
      useConfigFile: true
      configFilePath: ${{ inputs.configFilePath }}
  - name: Tag the repo
    shell: bash
    run: |
      echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
      COMMIT_MSG=$(git log -1 --pretty=%s)
      echo "Latest commit message: $COMMIT_MSG"
      git config user.name "GitHub Actions"
      git config user.email "actions@github.com"
      git tag ${{ steps.gitversion.outputs.semVer }} -m "$COMMIT_MSG"
      git push origin ${{ steps.gitversion.outputs.semVer }}
      
  # - name: tag the repo # old version before adding tag message
  #   # if: ${{ github.ref == 'refs/heads/master' }}
  #   shell: bash
  #   run: |
  #     echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  #     git tag ${{ steps.gitversion.outputs.semVer }} -m "TAG_MESSAGE"
  #     git push origin ${{ steps.gitversion.outputs.semVer }}

  # Possible improvement
  # - name: Tag the repo
  #   shell: bash
  #   run: |
  #     set -e
  
  #     TAG="${{ steps.gitversion.outputs.semVer }}"
  #     BRANCH=$(git rev-parse --abbrev-ref HEAD)
  #     MESSAGE="${{ inputs.tagMessage }}"
  #     if [ -z "$MESSAGE" ]; then
  #       MESSAGE="Release $TAG from $BRANCH"
  #     fi
  
  #     echo "Tagging $TAG with message: $MESSAGE"
  
  #     git config user.name "GitHub Actions"
  #     git config user.email "actions@github.com"
  
  #     git tag -a "$TAG" -m "$MESSAGE"
  #     git push origin "$TAG"
